#!/usr/bin/python

# input of this python script is generated by
# `pdftotext -eol unix -nopgbrk -layout AIA-IHS-GP-ClinicListing.pdf`
# first run `python parse-pdf.py < AIA-IHS-GP-ClinicListing.txt > table1.txt`
# then check the output and make fixes
# then run `python parse-pdf.py < table1.txt > table2.txt`
# until no "Bad Page"

import sys

titles = ['S/N', 'REGION', 'AREA', 'CLINIC NAME', 'ADDRESS', 'TEL',\
	'WEEKDAYS', 'WEEKDAYS (EVENING)', 'SATURDAY', 'SUNDAY', 'PUBLIC HOLIDAY',\
	'REMARKS']
NF = len(titles)
def flush_array(text_array, fields):
	assert not text_array[-1]
	text_array.pop()
	if not text_array:
		return

	empty_column = [True] * 1000
	for group in text_array:
		for line in group:
			i = 0
			for c in line:
				if c != ' ':
					empty_column[i] = False
				i += 1

	assert empty_column[0] and empty_column[1] # useful lines always starts with two spaces. patch if necessary
	field_ranges = []
	for i in range(2, 998):
		if empty_column[i-2] and empty_column[i-1] and not empty_column[i]: # start of field
			field_ranges.append([i, 0])
		if not empty_column[i-1] and empty_column[i] and empty_column[i+1]: # end of field
			field_ranges[-1][1] = i

	#print empty_column
	#print text_array[0][0]
	#print ''.join(map(lambda x: ' ' if x else 'o', empty_column))

	good_page = False
	if len(field_ranges) == NF:
		good_page = True
		for i in range(0, NF):
			if text_array[0][0][field_ranges[i][0]:field_ranges[i][1]].strip() != titles[i]:
				print text_array[0][0][field_ranges[i][0]:field_ranges[i][1]].strip(), titles[i]
				good_page = False
				break

	if good_page:
		for group in text_array[1:]:
			f = ["" for x in range(NF)]
			for line in group:
				for i in range(0, NF):
					f[i] += ' ' + line[field_ranges[i][0] : field_ranges[i][1]]
			d = {}
			for i in range(0, NF):
				d[titles[i]] = f[i].strip()
			fields.append(d)

	print "Good Page:" if good_page else 'Bad Page:'
	ruler = ''.join(map(lambda x: ' ' if x else 'o', empty_column))
	ruler = '#' + ruler[1:]
	ruler = ruler.replace('o o', 'o-o')
	print ruler
	for group in text_array:
		for line in group:
			print line
		print ''
	print 'end Page'
	print ''

text_array = []
fields = []

for line in sys.stdin:
	line = line.replace('\xc2\xa0', ' ')
	line = line.replace('\xe2\x80\x90', '-')
	line = line.replace('\xe2\x80\x93', '-')
	line = line.rstrip()
	if not line.startswith(' '):
		if len(text_array) > 0 and text_array[-1]:
			text_array.append([])
	elif line.startswith('  S/N         REGION '):
		if len(text_array) > 0:
			flush_array(text_array, fields)
		text_array = []
		text_array.append([])
		text_array[0].append(line)
		text_array.append([])
	else:
		text_array[-1].append(line)
flush_array(text_array, fields)

for row in fields:
	print '\t'.join(reduce(lambda x, y : x + [" ".join(row[y].split())], titles, ['PARSE_RESULT']))
